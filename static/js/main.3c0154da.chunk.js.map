{"version":3,"sources":["List/List.jsx","App.js","index.js"],"names":["List","goodsFromServer","setCurrentProduct","setToBeRemoved","checkOptionValue","value","className","map","product","key","id","name","priority","onChange","event","status","target","type","onClick","App","useState","setName","setPriority","setStatus","removed","productList","setProductList","currentProduct","useEffect","filter","placeholder","htmlFor","preventDefault","productName","toLowerCase","trim","find","sort","a","b","localeCompare","addToList","length","option","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c0154da.chunk.js","sourcesContent":["import React from 'react';\nimport './List.scss';\n\nexport const List = ({\n  goodsFromServer,\n  setCurrentProduct,\n  setToBeRemoved }) => {\n\n  const checkOptionValue = (value) => {\n    return (value === 'Have')\n      ? 'Run Out'\n      : 'Have';\n  };\n\n  return (\n    <table className=\"list__table table\">\n      <thead className=\"table__head\">\n        <tr>\n          <th>Product</th>\n          <th>Priority</th>\n          <th>Status</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody className=\"table__body\">\n        {goodsFromServer.map(product => (\n          <tr className=\"table__row\" key={product.id}>\n            <td className=\"table__cell\" >{product.name}</td>\n            <td>{product.priority}</td>\n            <td>\n              <select\n                className=\"table__select\"\n                onChange={(event) => {\n                  setCurrentProduct({\n                    name: product.name,\n                    status: event.target.value\n                  })\n                }}>\n                <option value={product.status}>{product.status}</option>\n                <option value={checkOptionValue(product.status)}>\n                  {checkOptionValue(product.status)}\n                </option>\n              </select>\n            </td>\n            <td>\n              <button type=\"button\"\n                className=\"table__button\"\n                onClick={() => {\n                  setToBeRemoved(product.name)\n                }}>\n                X\n            </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n};","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { List } from './List/List';\nlet goodsFromServer = [];\n\nfunction App() {\n\n  const [name, setName] = useState('');\n  const [priority, setPriority] = useState(0);\n  const [status, setStatus] = useState(0);\n  const [removed, setToBeRemoved] = useState('');\n  const [productList, setProductList] = useState(goodsFromServer);\n  const [currentProduct, setCurrentProduct] = useState(null);\n\n  const addToList = (event) => {\n    event.preventDefault();\n    const productName = name.toLowerCase().trim();\n\n    if (productName && priority && status) {\n      const isAlreadyOnTheList = goodsFromServer\n        .find(product => product.name.toLowerCase() === productName);\n\n      if (isAlreadyOnTheList) {\n        return;\n      }\n\n      goodsFromServer = [...goodsFromServer, {\n        name,\n        priority: +priority,\n        id: name,\n        status\n      }]\n        .sort((a, b) => a.name.localeCompare(b.name))\n        .sort((a, b) => (a.priority - b.priority));\n\n      setProductList(goodsFromServer);\n      setName('');\n      setPriority(0);\n      setStatus(0);\n    }\n  };\n\n  useEffect(() => {\n    if (removed) {\n      goodsFromServer = goodsFromServer.filter(product => (\n        product.name !== removed\n      ));\n    }\n    setProductList(goodsFromServer);\n  }, [removed]);\n\n  useEffect(() => {\n    if (currentProduct) {\n      productList.map(product => {\n        if (product.name === currentProduct.name) {\n          product.status = currentProduct.status;\n        }\n        return product;\n      });\n    }\n  }, [currentProduct]);\n\n  const filterGoods = (option) => {\n    if (option === 'All') {\n      setProductList(goodsFromServer);\n    } else {\n      setProductList(goodsFromServer\n        .filter(product => product.status === option))\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <section className=\"top\">\n        <input\n          type=\"text\"\n          value={name}\n          placeholder=\"Enter product name\"\n          className=\"top__input\"\n          onChange={(event) => {\n            setName(event.target.value)\n          }}\n        >\n        </input>\n        <div>\n          <label htmlFor=\"priority\">Select priority: </label>\n          <select\n            className=\"top__priority\"\n            value={priority}\n            name=\"priority\"\n            onChange={(event) => {\n              setPriority(event.target.value)\n            }}>\n            <option></option>\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"3\">3</option>\n            <option value=\"4\">4</option>\n            <option value=\"5\">5</option>\n          </select>\n        </div>\n        <div>\n          <label htmlFor=\"status\">Select status: </label>\n          <select\n            className=\"top__status\"\n            name=\"status\"\n            value={status}\n            onChange={(event) => {\n              setStatus(event.target.value)\n            }}>\n            <option></option>\n            <option value=\"Have\">Have</option>\n            <option value=\"Run Out\">Run Out</option>\n          </select>\n        </div>\n\n        <button type=\"submit\"\n          className=\"top__button\"\n          onClick={(event) => {\n            addToList(event)\n          }}\n        >\n          Add to list\n       </button>\n      </section>\n\n      {productList.length > 0 &&\n        <section className=\"list\">\n          <div>\n            <label htmlFor=\"filter\">Choose goods </label>\n            <select\n              className=\"top__filter\"\n              name=\"filter\"\n              onChange={(event) => {\n                filterGoods(event.target.value);\n              }}>\n              <option>All</option>\n              <option>Have</option>\n              <option>Run Out</option>\n            </select>\n          </div>\n          <List\n            goodsFromServer={productList}\n            setStatus={setStatus}\n            setToBeRemoved={setToBeRemoved}\n            setCurrentProduct={setCurrentProduct}\n          />\n        </section>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}